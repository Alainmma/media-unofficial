Source: Changes from recent waf versions/commits
Upstream: Reported, https://github.com/aubio/aubio/pull/380
Reason: Fix build with Python 3.11

diff -Naur aubio-0.4.9/waflib/ConfigSet.py aubio-0.4.9.new/waflib/ConfigSet.py
--- aubio-0.4.9/waflib/ConfigSet.py	2018-06-27 07:22:05.000000000 +0200
+++ aubio-0.4.9.new/waflib/ConfigSet.py	2023-02-28 09:32:41.218496244 +0100
@@ -146,7 +146,7 @@
 		Utils.writef(filename,''.join(buf))
 	def load(self,filename):
 		tbl=self.table
-		code=Utils.readf(filename,m='rU')
+		code=Utils.readf(filename,m='r')
 		for m in re_imp.finditer(code):
 			g=m.group
 			tbl[g(2)]=eval(g(3))
diff -Naur aubio-0.4.9/waflib/Context.py aubio-0.4.9.new/waflib/Context.py
--- aubio-0.4.9/waflib/Context.py	2018-12-23 12:11:54.000000000 +0100
+++ aubio-0.4.9.new/waflib/Context.py	2023-02-28 10:20:00.032676968 +0100
@@ -106,7 +106,7 @@
 				cache[node]=True
 				self.pre_recurse(node)
 				try:
-					function_code=node.read('rU',encoding)
+					function_code=node.read('r',encoding)
 					exec(compile(function_code,node.abspath(),'exec'),self.exec_dict)
 				finally:
 					self.post_recurse(node)
@@ -346,7 +346,7 @@
 		pass
 	module=imp.new_module(WSCRIPT_FILE)
 	try:
-		code=Utils.readf(path,m='rU',encoding=encoding)
+		code=Utils.readf(path,m='r',encoding=encoding)
 	except EnvironmentError:
 		raise Errors.WafError('Could not read the file %r'%path)
 	module_dir=os.path.dirname(path)
diff -Naur aubio-0.4.9/waflib/Tools/python.py aubio-0.4.9.new/waflib/Tools/python.py
--- aubio-0.4.9/waflib/Tools/python.py	2018-11-06 00:20:16.000000000 +0100
+++ aubio-0.4.9.new/waflib/Tools/python.py	2023-02-28 09:27:36.555172597 +0100
@@ -196,7 +196,7 @@
 	pybin=env.PYTHON
 	if not pybin:
 		conf.fatal('Could not find the python executable')
-	v='prefix SO LDFLAGS LIBDIR LIBPL INCLUDEPY Py_ENABLE_SHARED MACOSX_DEPLOYMENT_TARGET LDSHARED CFLAGS LDVERSION'.split()
+	v='prefix SO EXT_SUFFIX LDFLAGS LIBDIR LIBPL INCLUDEPY Py_ENABLE_SHARED MACOSX_DEPLOYMENT_TARGET LDSHARED CFLAGS LDVERSION'.split()
 	try:
 		lst=conf.get_python_variables(["get_config_var('%s') or ''"%x for x in v])
 	except RuntimeError:
@@ -207,7 +207,7 @@
 	x='MACOSX_DEPLOYMENT_TARGET'
 	if dct[x]:
 		env[x]=conf.environ[x]=dct[x]
-	env.pyext_PATTERN='%s'+dct['SO']
+	env.pyext_PATTERN='%s'+(dct['EXT_SUFFIX'] or dct['SO']) # SO is deprecated in 3.5 and removed in 3.11
 	num='.'.join(env.PYTHON_VERSION.split('.')[:2])
 	conf.find_program([''.join(pybin)+'-config','python%s-config'%num,'python-config-%s'%num,'python%sm-config'%num],var='PYTHON_CONFIG',msg="python-config",mandatory=False)
 	if env.PYTHON_CONFIG:
