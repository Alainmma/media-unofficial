# Copyright 2009-2010 Ali Polatel <alip@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require zsh-completion

export_exlib_phases src_configure src_install

SUMMARY="cron like daemon for mpd"
DESCRIPTION="
A 'cron' like program for mpd. It can execute scripts based on mpd's idle events.
"
HOMEPAGE="http://alip.github.com/${PN}"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    notification [[ description = [ Build the notification standard module ] ]]
    scrobbler [[ description = [ Build the scrobbler standard module ] ]]
    stats [[ description = [ Build the statistics module ] ]]
"

DEPENDENCIES="
    build:
        virtual/pkg-config
    build+run:
        dev-libs/glib:2[>=2.18.4]
        dev-libs/libdaemon[>=0.13]
        media-libs/libmpdclient[>=2.1]
        notification? ( x11-libs/libnotify )
        scrobbler? ( net-misc/curl )
        stats? ( dev-db/sqlite:3[>3] )
    suggestion:
        media-sound/mpd [[ description = [ mpdcron connects to an mpd daemon, either locally or on a remote host ] ]]
        stats? (
            dev-ruby/nokogiri [[ description = [ Required to import data from Last.fm ] ]]
            dev-ruby/chronic [[ description = [ May be used by the Last.fm importer script ] ]]
        )
"

UPSTREAM_DOCUMENTATION="http://github.com/alip/${PN}/blob/master/README.mkd"

ZSH_COMPLETIONS=(
    zsh-completion/_eugene
    zsh-completion/_mpdcron
    zsh-completion/_walrus
)

mpdcron_src_configure() {
    local myconf=() modules=()

    # Enable modules by default.
    myconf+=(--enable-gmodule)
    option notification && modules+=(notification)
    option scrobbler && modules+=(scrobbler)
    option stats && modules+=(stats)
    [[ -n "${modules[@]}" ]] && myconf+=(--with-standard-modules="$(echo ${modules[@]} | tr -s \  ,)")

    econf "${myconf[@]}"
}

mpdcron_src_install() {
    default
    zsh-completion_src_install
}

