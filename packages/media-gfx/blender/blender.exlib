# Copyright 2009 Michael Forney
# Copyright 2011 Pierre Lejeune <superheron@gmail.com>
# Copyright 2014 Johannes Nixdorf <mixi@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require cmake [ cmake_minimum_version=2.8 api=2 ] freedesktop-desktop \
        python [ blacklist="2 3.1 3.2" multibuild=false ] flag-o-matic

export_exlib_phases src_prepare src_configure src_install

# FIXME: Tests fire tons of sydbox violations
RESTRICT="test"

SUMMARY="Blender is the free open source 3D content creation suite"
HOMEPAGE="http://blender.org"
DOWNLOADS="http://download.blender.org/source/${PNV}.tar.gz"

REMOTE_IDS="freecode:${PN}"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    fftw     [[ description = [ Support for smoke, audio effects and the ocean simulator ] ]]
    jack     [[ description = [ Support for sound output through jack ] ]]
    jpeg2000
    openal   [[ description = [ Support for sound output using openal ] ]]
    openmp
    sdl      [[ description = [ Support for sound output using SDL and joystick support ] ]]
    sndfile  [[ description = [ Support for some audio codecs through libsndfile ] ]]

    ffmpeg
    libav    [[ requires = [ ffmpeg ] ]]
"

DEPENDENCIES="
    build:
        x11-proto/xproto
    build+run:
        dev-libs/boost[>=1.48.0]
        dev-python/numpy[>=1.7.0][python_abis:*(-)?]
        media-libs/OpenImageIO
        media-libs/freetype:2
        media-libs/glew
        media-libs/ilmbase
        media-libs/jpeg
        media-libs/libpng:=
        media-libs/openexr
        media-libs/tiff
        sys-libs/zlib
        x11-dri/glu
        x11-dri/mesa
        x11-libs/libX11
        x11-libs/libXi
        x11-libs/libXxf86vm
        ffmpeg? (
            !libav? ( media/ffmpeg )
            libav?  ( media/libav  )
        )
        fftw?     ( sci-libs/fftw[>=3.0]                  )
        jack?     ( media-sound/jack-audio-connection-kit )
        jpeg2000? ( media-libs/OpenJPEG:0                 )
        libav?    ( media/libav                           )
        openal?   ( media-libs/openal                     )
        sdl?      ( media-libs/SDL:0                      )
        sndfile?  ( media-libs/libsndfile                 )
    suggestion:
        dev-python/requests[python_abis:*(-)?] [[ description = [ Support to upload models to sketchfab ] ]]
"

blender_src_prepare() {
    if option openmp; then
        # stolen from the cmake test
        # we can't just test for the flag because clang ignores it and returns 0
        cat > "${WORKBASE}"/openmp-test.c <<HERE
#include <omp.h>
int main() {
    #ifdef _OPENMP
        return 0;
    #else
        breaks_on_purpose
    #endif
}
HERE

        if ! ${CC}  ${CFLAGS}   -fopenmp "${WORKBASE}"/openmp-test.c -o /dev/null &> /dev/null ||
           ! ${CXX} ${CXXFLAGS} -fopenmp "${WORKBASE}"/openmp-test.c -o /dev/null &> /dev/null; then
            eerror "You enabled the openmp option for blender but your selected compiler doesn't support it."
            eerror "Either use a different compiler or disable the openmp option."
            die
        fi
    fi
}

blender_src_configure() {
    # WITH_OPENIMAGEIO: required for cycles
    # WITH_INSTALL_PORTABLE: respect CMAKE_INSTALL_PREFIX
    # WITH_PYTHON_INSTALL*: use the system python modules
    # WITH_OPENCOLORIO, WITH_INPUT_NDOF: unwritten dependencies
    # no WITH_SYSTEM_BULLET: not supported by upstream because of missing features
    local args=(
        $(cmake_with OPENAL)
        $(cmake_with OPENMP)
        $(cmake_with SDL)
        $(cmake_with ffmpeg CODEC_FFMPEG)
        $(cmake_with fftw FFTW3)
        $(cmake_with fftw MOD_OCEANSIM)
        $(cmake_with jpeg2000 IMAGE_OPENJPEG)
        $(cmake_with sndfile CODEC_SNDFILE)
        -DPYTHON_VERSION:STRING=$(python_get_abi)
        -DWITH_INPUT_NDOF:BOOL=FALSE
        -DWITH_INSTALL_PORTABLE:BOOL=FALSE
        -DWITH_OPENCOLORIO:BOOL=FALSE
        -DWITH_OPENIMAGEIO:BOOL=TRUE
        -DWITH_PLAYER:BOOL=TRUE
        -DWITH_PYTHON_INSTALL:BOOL=FALSE
        -DWITH_PYTHON_INSTALL_NUMPY:BOOL=FALSE
        -DWITH_PYTHON_INSTALL_REQUESTS:BOOL=FALSE
    )

    ecmake "${args[@]}"
}

blender_src_install() {
    cmake_src_install

    edo mv "${IMAGE}"/usr/share/doc/${PN}{,"-${PV}"}

    keepdir /usr/share/${PN}/${PV}/scripts/addons_contrib
}

