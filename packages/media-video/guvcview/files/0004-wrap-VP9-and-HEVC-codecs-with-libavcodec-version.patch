From dcfb3e85d3e8d24982a5902949ad7d0dc8537ad3 Mon Sep 17 00:00:00 2001
From: Paulo Assis <pj.assis@gmail.com>
Date: Fri, 1 Jul 2016 16:36:49 +0100
Subject: [PATCH 04/19] wrap VP9 and HEVC codecs with libavcodec version

---
 gview_encoder/encoder.c      |  4 ++--
 gview_encoder/matroska.c     |  2 ++
 gview_encoder/video_codecs.c | 13 +++++++++----
 3 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/gview_encoder/encoder.c b/gview_encoder/encoder.c
index fbce373..3393b45 100644
--- a/gview_encoder/encoder.c
+++ b/gview_encoder/encoder.c
@@ -502,8 +502,8 @@ static encoder_video_context_t *encoder_video_init(encoder_context_t *encoder_ct
 	   //av_dict_set(&video_codec_data->private_options, "rc_lookahead", "1", 0);
 	   av_dict_set(&video_codec_data->private_options, "crf", "23", 0);
 	}
-#ifdef AV_CODEC_ID_H265
-	if(video_defaults->codec_id == AV_CODEC_ID_H265)
+#if LIBAVCODEC_VER_AT_LEAST(55,24)
+	if(video_defaults->codec_id == AV_CODEC_ID_HEVC)
 	{
 	   video_codec_data->codec_context->me_range = 16;
 	   av_dict_set(&video_codec_data->private_options, "crf", "28", 0);
diff --git a/gview_encoder/matroska.c b/gview_encoder/matroska.c
index 27b79bd..2a3fcc9 100644
--- a/gview_encoder/matroska.c
+++ b/gview_encoder/matroska.c
@@ -524,7 +524,9 @@ static int mkv_write_tracks(mkv_context_t *mkv_ctx)
         mkv_put_ebml_string(mkv_ctx, MATROSKA_ID_CODECID, mkv_codec_name);
 
         if ((mkv_ctx->mode == ENCODER_MUX_WEBM) && !(stream->codec_id == AV_CODEC_ID_VP8 ||
+#if LIBAVCODEC_VER_AT_LEAST(54,42)
 										stream->codec_id == AV_CODEC_ID_VP9 ||
+#endif
                                         stream->codec_id == AV_CODEC_ID_VORBIS))
 		{
             fprintf(stderr, "ENCODER: (matroska) Only VP8 or VP9 video and Vorbis audio are supported for WebM.\n");
diff --git a/gview_encoder/video_codecs.c b/gview_encoder/video_codecs.c
index 7318137..1a58181 100644
--- a/gview_encoder/video_codecs.c
+++ b/gview_encoder/video_codecs.c
@@ -395,7 +395,7 @@ static video_codec_t listSupCodecs[] =
 		.flags        = CODEC_FLAG2_BPYRAMID | CODEC_FLAG2_WPRED | CODEC_FLAG2_FASTPSKIP | CODEC_FLAG2_INTRA_REFRESH
 #endif
 	},
-#ifdef AV_CODEC_ID_H265
+#if LIBAVCODEC_VER_AT_LEAST(55,24)
 	{
 		.valid        = 1,
 		.compressor   = "HEVC", //h265
@@ -422,7 +422,7 @@ static video_codec_t listSupCodecs[] =
 		.qblur        = 0.5,
 		.subq         = 5,
 		.framerefs    = 0,
-		.codec_id     = AV_CODEC_ID_H265,
+		.codec_id     = AV_CODEC_ID_HEVC,
 		.codec_name   = "libx265",
 		.mb_decision  = FF_MB_DECISION_RD,
 		.trellis      = 0,
@@ -469,6 +469,7 @@ static video_codec_t listSupCodecs[] =
 		.num_threads  = 4,
 		.flags        = 0
 	},
+#if LIBAVCODEC_VER_AT_LEAST(54,42)
 	{
 		.valid        = 1,
 		.compressor   = "VP90",
@@ -505,6 +506,7 @@ static video_codec_t listSupCodecs[] =
 		.num_threads  = 4,
 		.flags        = 0
 	},
+#endif
 	{
 		.valid        = 1,
 		.compressor   = "theo",
@@ -872,8 +874,11 @@ int encoder_check_webm_video_codec(int codec_ind)
 
 	int ret = 0;
 	if(real_index >= 0 && real_index < encoder_get_video_codec_list_size())
-		ret = ((listSupCodecs[real_index].codec_id == AV_CODEC_ID_VP8) ||
-			(listSupCodecs[real_index].codec_id == AV_CODEC_ID_VP9)) ? 1: 0;
+		ret = ((listSupCodecs[real_index].codec_id == AV_CODEC_ID_VP8)
+#if LIBAVCODEC_VER_AT_LEAST(54,42)
+				|| (listSupCodecs[real_index].codec_id == AV_CODEC_ID_VP9)
+#endif
+			 ) ? 1: 0;
 
 	return ret;
 }
-- 
2.10.2

