From c7de04c99372676d8fdfcb35f6e935597dae1542 Mon Sep 17 00:00:00 2001
From: Paulo Assis <pj.assis@gmail.com>
Date: Fri, 3 Jun 2016 12:06:47 +0100
Subject: [PATCH 01/19] fix deprecated libavcodec warnings

---
 gview_encoder/encoder.h       |  3 +--
 gview_v4l2core/jpeg_decoder.c | 27 ++++++++++++++++++++++++--
 gview_v4l2core/uvc_h264.c     | 45 ++++++++++++++++++++++++++++---------------
 3 files changed, 56 insertions(+), 19 deletions(-)

diff --git a/gview_encoder/encoder.h b/gview_encoder/encoder.h
index 1c946df..b8f2d2b 100644
--- a/gview_encoder/encoder.h
+++ b/gview_encoder/encoder.h
@@ -35,9 +35,8 @@
 #include <libavcodec/avcodec.h>
 	#ifdef HAVE_LIBAVUTIL_VERSION_H
 #include <libavutil/version.h>
-	#else
-#include <libavutil/avutil.h>
 	#endif
+#include <libavutil/avutil.h>
 #endif 
 
 #define LIBAVCODEC_VER_AT_LEAST(major,minor)  (LIBAVCODEC_VERSION_MAJOR > major || \
diff --git a/gview_v4l2core/jpeg_decoder.c b/gview_v4l2core/jpeg_decoder.c
index ebad53d..f37ce0c 100644
--- a/gview_v4l2core/jpeg_decoder.c
+++ b/gview_v4l2core/jpeg_decoder.c
@@ -1352,12 +1352,25 @@ void jpeg_close_decoder()
 #include <ffmpeg/avcodec.h>
 #else
 #include <libavcodec/avcodec.h>
+	#ifdef HAVE_LIBAVUTIL_VERSION_H
+#include <libavutil/version.h>
+#include <libavutil/imgutils.h>
+	#endif
+#include <libavutil/avutil.h>
 #endif 
 
 #define LIBAVCODEC_VER_AT_LEAST(major,minor)  (LIBAVCODEC_VERSION_MAJOR > major || \
                                               (LIBAVCODEC_VERSION_MAJOR == major && \
                                                LIBAVCODEC_VERSION_MINOR >= minor))
 
+#ifdef LIBAVUTIL_VERSION_MAJOR
+#define LIBAVUTIL_VER_AT_LEAST(major,minor)  (LIBAVUTIL_VERSION_MAJOR > major || \
+                                              (LIBAVUTIL_VERSION_MAJOR == major && \
+                                               LIBAVUTIL_VERSION_MINOR >= minor))
+#else
+#define LIBAVUTIL_VER_AT_LEAST(major,minor) 0
+#endif
+
 #if !LIBAVCODEC_VER_AT_LEAST(54,25)
 	#define AV_CODEC_ID_H264 CODEC_ID_H264
 #endif
@@ -1436,7 +1449,7 @@ int jpeg_init_decoder(int width, int height)
 		exit(-1);
 	}
 
-	codec_data->context->pix_fmt = PIX_FMT_YUV422P;
+	codec_data->context->pix_fmt = AV_PIX_FMT_YUV422P;
 	codec_data->context->width = width;
 	codec_data->context->height = height;
 	//jpeg_ctx->context->dsp_mask = (FF_MM_MMX | FF_MM_MMXEXT | FF_MM_SSE);
@@ -1471,8 +1484,11 @@ int jpeg_init_decoder(int width, int height)
 		fprintf(stderr, "V4L2_CORE: FATAL memory allocation failure (jpeg_init_decoder): %s\n", strerror(errno));
 		exit(-1);
 	}
-	
+#if LIBAVUTIL_VER_AT_LEAST(54,6)
+	jpeg_ctx->pic_size = av_image_get_buffer_size(codec_data->context->pix_fmt, width, height, 1);
+#else
 	jpeg_ctx->pic_size = avpicture_get_size(codec_data->context->pix_fmt, width, height);
+#endif
 	jpeg_ctx->width = width;
 	jpeg_ctx->height = height;
 	jpeg_ctx->codec_data = codec_data;
@@ -1521,8 +1537,15 @@ int jpeg_decode(uint8_t *out_buf, uint8_t *in_buf, int size)
 
 	if(got_picture)
 	{
+#if LIBAVUTIL_VER_AT_LEAST(54,6)
+		const AVPicture *src = (const AVPicture *) codec_data->picture;
+		av_image_copy_to_buffer(jpeg_ctx->tmp_frame, jpeg_ctx->pic_size,
+                             (const uint8_t * const*) src->data, src->linesize,
+                             codec_data->context->pix_fmt, jpeg_ctx->width, jpeg_ctx->height, 1);
+#else
 		avpicture_layout((AVPicture *) codec_data->picture, codec_data->context->pix_fmt, 
 			jpeg_ctx->width, jpeg_ctx->height, jpeg_ctx->tmp_frame, jpeg_ctx->pic_size);
+#endif
 		/* libavcodec output is in yuv422p */
         yuv422p_to_yu12(out_buf, jpeg_ctx->tmp_frame, jpeg_ctx->width, jpeg_ctx->height);
 	
diff --git a/gview_v4l2core/uvc_h264.c b/gview_v4l2core/uvc_h264.c
index 8c7e9a5..7db16b7 100644
--- a/gview_v4l2core/uvc_h264.c
+++ b/gview_v4l2core/uvc_h264.c
@@ -35,25 +35,29 @@
 #include "gview.h"
 #include "../config.h"
 
-/*h264 decoder (libavcodec)*/
-#ifdef HAVE_AVCODEC_H
-  #include <avcodec.h>
+#ifdef HAVE_FFMPEG_AVCODEC_H
+#include <ffmpeg/avcodec.h>
 #else
-  #ifdef HAVE_LIBAVCODEC_AVCODEC_H
-    #include <libavcodec/avcodec.h>
-  #else
-    #ifdef HAVE_FFMPEG_AVCODEC_H
-      #include <ffmpeg/avcodec.h>
-    #else
-      #include <libavcodec/avcodec.h>
-    #endif
-  #endif
-#endif
+#include <libavcodec/avcodec.h>
+	#ifdef HAVE_LIBAVUTIL_VERSION_H
+#include <libavutil/version.h>
+#include <libavutil/imgutils.h>
+	#endif
+#include <libavutil/avutil.h>
+#endif 
 
 #define LIBAVCODEC_VER_AT_LEAST(major,minor)  (LIBAVCODEC_VERSION_MAJOR > major || \
                                               (LIBAVCODEC_VERSION_MAJOR == major && \
                                                LIBAVCODEC_VERSION_MINOR >= minor))
 
+#ifdef LIBAVUTIL_VERSION_MAJOR
+#define LIBAVUTIL_VER_AT_LEAST(major,minor)  (LIBAVUTIL_VERSION_MAJOR > major || \
+                                              (LIBAVUTIL_VERSION_MAJOR == major && \
+                                               LIBAVUTIL_VERSION_MINOR >= minor))
+#else
+#define LIBAVUTIL_VER_AT_LEAST(major,minor) 0
+#endif
+
 #if !LIBAVCODEC_VER_AT_LEAST(54,25)
 	#define AV_CODEC_ID_H264 CODEC_ID_H264
 #endif
@@ -1036,7 +1040,7 @@ int h264_init_decoder(int width, int height)
 	}
 	
 	h264_ctx->context->flags2 |= CODEC_FLAG2_FAST;
-	h264_ctx->context->pix_fmt = PIX_FMT_YUV420P;
+	h264_ctx->context->pix_fmt = AV_PIX_FMT_YUV420P;
 	h264_ctx->context->width = width;
 	h264_ctx->context->height = height;
 	//h264_ctx->context->dsp_mask = (FF_MM_MMX | FF_MM_MMXEXT | FF_MM_SSE);
@@ -1062,8 +1066,12 @@ int h264_init_decoder(int width, int height)
 	h264_ctx->picture = avcodec_alloc_frame();
 	avcodec_get_frame_defaults(h264_ctx->picture);
 #endif
-	
+
+#if LIBAVUTIL_VER_AT_LEAST(54,6)
+	h264_ctx->pic_size = av_image_get_buffer_size(h264_ctx->context->pix_fmt, width, height, 1);
+#else
 	h264_ctx->pic_size = avpicture_get_size(h264_ctx->context->pix_fmt, width, height);
+#endif
 	h264_ctx->width = width;
 	h264_ctx->height = height;
 
@@ -1109,8 +1117,15 @@ int h264_decode(uint8_t *out_buf, uint8_t *in_buf, int size)
 
 	if(got_picture)
 	{
+#if LIBAVUTIL_VER_AT_LEAST(54,6)
+		const AVPicture *src = (const AVPicture *) h264_ctx->picture;
+		av_image_copy_to_buffer(out_buf, h264_ctx->pic_size,
+                             (const uint8_t * const*) src->data, src->linesize,
+                             h264_ctx->context->pix_fmt, h264_ctx->width, h264_ctx->height, 1);
+#else
 		avpicture_layout((AVPicture *) h264_ctx->picture, h264_ctx->context->pix_fmt, 
 			h264_ctx->width, h264_ctx->height, out_buf, h264_ctx->pic_size);
+#endif
 		return len;
 	}
 	else
-- 
2.10.2

